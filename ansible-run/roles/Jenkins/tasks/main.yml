- name: Update all Debian/Ubuntu packages to their latest version
  ansible.builtin.apt:
    name: "*"
    state: latest

- name: Ensure /etc/apt/keyrings directory exists
  ansible.builtin.file:
    path: /etc/apt/keyrings/
    state: directory

- name: Download Adoptium GPG key and Add Adoptium APT repository
  ansible.builtin.get_url: 
    url: https://packages.adoptium.net/artifactory/api/gpg/key/public
    dest: /etc/apt/keyrings/adoptium.asc

- name: Download Adoptium GPG key and Add Adoptium APT repository
  block:
    - name: somerepo |no apt key
      ansible.builtin.get_url:
        url: https://packages.adoptium.net/artifactory/api/gpg/key/public
        dest: /etc/apt/keyrings/adoptium.asc

    - name: somerepo | apt source
      ansible.builtin.apt_repository:
        repo: "deb [signed-by=/etc/apt/keyrings/adoptium.asc] https://packages.adoptium.net/artifactory/deb {{ ansible_distribution_release }} main"
        state: present

- name: Install the latest version of jdk
  ansible.builtin.package:
    name:
      - temurin-17-jdk
    state: latest

- name: Ensure /usr/share/keyrings directory exists and add Jenkins GPG key and repository
  block:
    - name: Download Jenkins GPG key
      ansible.builtin.get_url:
        url: https://pkg.jenkins.io/debian-stable/jenkins.io-2023.key
        dest: /usr/share/keyrings/jenkins-keyring.asc

    - name: Add Jenkins APT repository
      ansible.builtin.apt_repository:
        repo: "deb [signed-by=/usr/share/keyrings/jenkins-keyring.asc] https://pkg.jenkins.io/debian-stable binary/"
        state: present
        filename: jenkins

- name: Install the Jenkins
  ansible.builtin.package:
    name:
      - jenkins
    state: latest

- name: Start service jenkins
  ansible.builtin.systemd:
    name: jenkins
    enabled: yes
    state: started

- name: Install Docker.io
  ansible.builtin.package:
    name: docker.io
    state: present
    update_cache: yes

- name: Add ubuntu user to docker group
  ansible.builtin.user:
    name: ubuntu
    groups: docker
    append: yes

- name: Change group ownership of Docker socket
  ansible.builtin.file:
    path: /var/run/docker.sock
    group: docker
    state: file
    mode: '0777'

- name: Run SonarQube container
  community.docker.docker_container:
    name: sonar
    image: sonarqube:lts-community
    state: started
    restart_policy: always
    #python_path: "/usr/bin/python3"  # Specify the Python interpreter path
    ports:
      - "9000:9000"
  ignore_errors: true


- name: Check if SonarQube container is running
  shell: docker ps -f name=sonar -q
  register: sonar_container_id
  ignore_errors: true

- name: Print container ID if SonarQube is running
  debug:
    msg: "SonarQube container is running with ID {{ sonar_container_id.stdout }}"
  when: sonar_container_id.stdout | length > 0
  ignore_errors: true

  
- name: Install prerequisites
  ansible.builtin.package:
    name: "{{ item }}"
    state: present
    with_items:
      - wget
      - curl
      - unzip
      - apt-transport-https
      - gnupg
      - lsb-release

- name:  Add Trivy GPG key and repository
  block:
    - name: Download Trivy GPG key
      ansible.builtin.get_url:
        url: https://aquasecurity.github.io/trivy-repo/deb/public.key
        dest: /usr/share/keyrings/trivy.gpg

    - name: Add Trivy repository
      ansible.builtin.apt_repository:
        repo: "deb [signed-by=/usr/share/keyrings/trivy.gpg] https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main"
        state: present
        filename: trivy

- name: Install trivy
  ansible.builtin.package:
    name: trivy
    state: present
    update_cache: yes

- name:  Add Terraform GPG key and repository
  block:
    - name: Download Trivy GPG key
      ansible.builtin.get_url:
        url: https://apt.releases.hashicorp.com/gpg
        dest: /usr/share/keyrings/hashicorp-archive-keyring.gpg

    - name: Add Terraform repository
      ansible.builtin.apt_repository:
        repo: "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main"
        state: present
        filename: terraform

- name: Install terraform
  ansible.builtin.package:
    name: terraform
    state: present
    update_cache: yes


- name: Install kubectl
  block:
    - name: Download kubectl binary
      shell: curl -LO https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl
      args:
        chdir: /usr/local/bin

    - name: Set executable permissions for kubectl
      file:
        path: /usr/local/bin/kubectl
        mode: '0755'

    - name: Check kubectl version
      shell: kubectl version --client
      register: kubectl_version_output


- name: Install AWS CLI
  block:
    - name: Download AWS CLI installer
      shell: curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
      args:
        chdir: /tmp


    - name: Unzip AWS CLI installer
      shell: unzip awscliv2.zip
      args:
        chdir: /tmp

    - name: Install AWS CLI
      shell: sudo /tmp/aws/install

    - name: Check AWS CLI version
      shell: aws --version
      register: aws_version_output


# #install Aws cli 
# curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
# sudo apt-get install unzip -y
# unzip awscliv2.zip
# sudo ./aws/install